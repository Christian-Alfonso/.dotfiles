# Needed for color terminal, use "xterm" over "screen"
# because it does not wash out the colors in Windows
# Terminal comparatively for some reason
set -ga terminal-overrides ",xterm-256color*:Tc"
set -g default-terminal "xterm-256color"

# Set cursor to vertical line on exit by default
set -ga terminal-overrides ',*:Se=\e[5 q'

# Set default shell to ZSH in case it was not set automatically
set-option -g default-shell /bin/zsh

# Renumber automatically to keep things simple
# when moving and killing windows
set-option -g renumber-windows on

# Makes tmux more responsive, especially for exiting insert
# mode in Neovim. Causes "0;10;1c" characters to appear in
# Windows Terminal when set to "0", so set it to "1" since
# 1 ms is still imperceptible, but works around that issue
set -s escape-time 2

# Apparently needed to help Neovim detect focus events,
# have not noticed such events or whether this helps
set -g focus-events on

# Allow mouse scrolling in Tmux
set -g mouse on

# Black magic that displays when prefix has been pressed
set -g status-right ' #{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}"#{=21:pane_title}" %H:%M %d-%b-%y'

# Rebind Ctrl-B commands to Ctrl-A, common convenience
# that matches "screen" command bindings
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Change background and foreground of status information
# at the bottom of the Tmux display
set -g status-style 'bg=#333333 fg=#FFFFFF'

set -g set-titles on
set -g set-titles-string "#S / #W"

# Allow Tmux config to be reloaded by pressing
# prefix and then 'r'
bind r source-file ~/.tmux.conf\; display-message "Tmux config reloaded"

# Resize window, can help if status bar is
# rendering strangely (which happens occasionally)
bind R resize-window

# Set individual window and pane indices
# to start at '1' instead of '0'
set -g base-index 1
setw -g pane-base-index 1

# Change copy command from trying to use "xclip" or "xsel"
# when running on Ubuntu WSL. Instead, use the native Windows
# "clip" tool, which allows VSCode's integrated terminal to
# use the tmux copy-mode, even though it doesn't currently
# support OSC 52 escape sequences to access clipboard.
if -b '[ "$(echo "$WSL_DISTRO_NAME")" = Ubuntu ]' {
    set -s copy-command 'clip.exe'
}

# Make it so window renames do not retain the old window name,
# quicker to rename without having to clear the old window name
unbind ,
bind , command-prompt -p (rename-window) "rename-window '%%'"

# Enable Vim-like navigation in copy-mode, and rebind
# certain keys to match what they do in Vim when in
# copy mode
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel

# Give Tmux Vim-like pane switching when navigating
# instead of needing to use arrow keys
bind ^ respawn-pane -k
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

# Create new session using this key to try to avoid
# multiple sessions being killed by terminal at once
# (does not always work, try to rely on Tmux commands
# to close instances instead of using terminal behavior)
bind S new-session

# Kill session immediately (see note on above as well)
bind K kill-session

# Navigate windows in Tmux like
# tabs in Windows Terminal
bind -n C-PageUp previous-window
bind -n C-PageDown next-window

# Move windows in Tmux like
# tabs in Windows Terminal
bind -n C-S-PageUp swap-window -t -1\; select-window -t -1
bind -n C-S-PageDown swap-window -t +1\; select-window -t +1

# Give profile-like binds for opening
# applications in a new window
bind -n C-F1 new-window "pwsh.exe"
bind -n C-F2 new-window "cmd.exe"
bind -n C-F3 new-window "powershell.exe"
bind -n C-F4 new-window -c ~

# Create a <C-s>+<Number> sequence that allows for additional
# custom rebinds related to switching panes to a specific application
bind -T root C-s switch-client -T switch-pane-keys

# Closes current pane and respawn (as that fixes some
# resizing issues) and reopens with the chosen application
bind -T switch-pane-keys 1 split-window "pwsh.exe"\; last-pane\; kill-pane\; select-layout even-vertical\; respawn-pane -k
bind -T switch-pane-keys 2 split-window "cmd.exe"\; last-pane\; kill-pane\; select-layout even-vertical\; respawn-pane -k
bind -T switch-pane-keys 3 split-window "powershell.exe"\; last-pane\; kill-pane\; select-layout even-vertical\; respawn-pane -k
bind -T switch-pane-keys 4 split-window "wsl.exe -d ubuntu --cd ~"\; last-pane\; kill-pane\; select-layout even-vertical\; respawn-pane -k

# Opens a new pane with the chosen application
bind -T switch-pane-keys M-1 split-window "pwsh.exe"
bind -T switch-pane-keys M-2 split-window "cmd.exe"
bind -T switch-pane-keys M-3 split-window "powershell.exe"
bind -T switch-pane-keys M-4 split-window "wsl.exe -d ubuntu --cd ~"

# Create a <C-z>+<Key> sequence for keys that are rebound as prefixes,
# so that they can still be passed to applications (zipped through Tmux)
bind -T root C-z switch-client -T zip-through-keys

bind -T zip-through-keys a send-keys C-a
bind -T zip-through-keys s send-keys C-s
bind -T zip-through-keys x send-keys C-x
bind -T zip-through-keys z send-keys C-z

# Fix Home and End keys not always supporting
# navigation to the beginning and end of line
bind -n Home send Escape "OH"
bind -n End send Escape "OF"